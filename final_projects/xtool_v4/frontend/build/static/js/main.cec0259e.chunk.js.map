{"version":3,"sources":["react/base/redux/StateListenerRegistry.js","react/base/redux/ReducerRegistry.js","react/base/redux/MiddlewareRegistry.js","react/app/reducer.js","react/base/portal/apis.js","react/app/apis.js","react/config.js","react/app/actions.js","react/app/components/Login.js","react/app/components/Homepage.js","react/app/components/Admin.js","react/app/components/Header.js","react/app/components/Sidebar.js","react/app/components/Xtool.js","react/base/author/components/PrivateComponent.js","react/logs/reducer.js","react/logs/actions.js","react/logs/apis.js","react/logs/components/UnListening.js","react/logconnection/reducer.js","react/logconnection/components/ConnectionQuality.js","react/logconnection/components/InfoDevice.js","react/logconnection/actions.js","react/logconnection/apis.js","react/logconnection/components/LogInfo.js","serviceWorker.js","react/openclass/reducer.js","react/openclass/actions.js","react/openclass/apis.js","react/openclass/components/OpenClass.js","index.js"],"names":["_selectorListeners","Set","prevSelections","store","this","selectorListener","prevSelection","get","selection","selector","getState","set","listener","e","add","size","subscribe","_listener","bind","Map","_elements","additional","combineReducers","name","reducer","applyMiddleware","middleware","push","stateDefault","userInfo","ReducerRegistry","register","state","action","type","page","url","token","Promise","resolve","reject","fetch","method","headers","mode","then","response","status","json","success","catch","err","setLocalstorage","key","value","localStorage","setItem","loginApi","param","body","JSON","stringify","post","username","password","config","localstorageKey","userinfo","system","vietnam","thailand","role","domain","api","socket","media","mediaSendmessage","xtool","lms","meet","changeUserinfo","changePage","Login","props","changeUsername","setState","target","changePassword","history","submitLogin","dispatch","loginResult","result","tokenApi","accessToken","participantId","displayName","roleName","systemType","alert","to","pathname","className","onChange","htmlFor","onClick","React","Component","connect","Homepage","Admin","Header","toggleNav","confirmLogout","toggle","$","html","toggleClass","removeItem","id","href","src","alt","aria-controls","aria-haspopup","aria-expanded","data-is-mobile-only","data-dropdown-event","data-dropdown-target","data-dropdown-type","data-dropdown-duration","data-dropdown-animation-in","data-dropdown-animation-out","aria-labelledby","Sidebar","cssClass","cssClassActive","activePage","data-toggle","data-parent","Xtool","idroom","iduser","submitRenderLink","PrivateComponent","roles","indexOf","userIds","children","logs","roomLogs","userLogs","getLogs","getLogInfo","getByRoomId","roomId","getByRoomIdApi","getLogInfoByRoomId","getByUserId","userId","getByUserIdApi","getLogInfoByUserId","UnListening","loadLogs","isLoad","isRoomLoad","isUserLoad","setRoomId","setUserId","findByRoomID","findByUserID","statusLogs","min","maxLength","placeholder","length","map","log","i","_id","usersLog","u","userName","data","bgcolor","download","Intl","DateTimeFormat","minute","second","format","timeCreated","listlog","ConnectionQuality","index","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","bitrate","upload","connectionQuality","colSpan","InfoDevice","OS","brand","browser","systemName","deviceId","systemVersion","browserVersion","getLog","roomid","userid","limit","res","error","getLogApi","logTypes","LogInfo","val","trim","focus","onTypeChange","logType","reload","this1","click","prop","nextProps","intervalId","setInterval","Boolean","window","location","hostname","match","userlist","userTL","roomTL","handleOpenClasses","getRoomsNVN","getRoom","getRoomsNTL","getRoomTL","getUser","getUserList","getUserTL","getUsersTL","sections","OpenClass","handleOpenClass","a","created","getRooms","getUsers","filter","section","slice","forEach","room","rooms","timeAvailable","roomsInSection","renderLink","user","parse","getItem","gv","teacher","po","hv","student","tg","assistant","startDomain","btoa","unescape","encodeURIComponent","fullName","idVcrx","roleid","teachers","POs","students","assistants","classes","dataCheat","studentTL","teacherTL","isLoading","teacherVN","POTL","users","pos","saveLogMove","defaultValue","linkGV_WEB","linkGVVN_WEB","linkPO_WEB","linkHV1_WEB","linkHV2_WEB","linkHV3_WEB","linkHV4_WEB","linkHV5_WEB","linkHV6_WEB","slide","title","video","toLocaleString","disabled","callingApi","openClasses","linkGV","linkPO","linkTG","linkHV1_APP","linkHV2_APP","linkHV3_APP","linkHV4_APP","linkHV5_APP","linkHV6_APP","APP","MiddlewareRegistry","Thunk","createStore","StateListenerRegistry","_createStore","ReactDOM","render","browserHistory","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cec0259e.chunk.js","sourcesContent":["import type { Store } from 'redux';\n\ntype Listener\n    = (selection: any, store: Store<*, *>, prevSelection: any) => void;\n\ntype Selector = (state: Object, prevSelection: any) => any;\n\ntype SelectorListener = {\n    listener: Listener,\n    selector: Selector\n};\n\nclass StateListenerRegistry {\n    _selectorListeners: Set<SelectorListener> = new Set();\n\n    _listener: ({\n        prevSelections: Map<SelectorListener, any>,\n        store: Store<*, *>\n    }) => void;\n\n    _listener({ prevSelections, store }: {\n            prevSelections: Map<SelectorListener, any>,\n            store: Store<*, *>\n    }) {\n        for (const selectorListener of this._selectorListeners) {\n            const prevSelection = prevSelections.get(selectorListener);\n\n            try {\n                const selection\n                    = selectorListener.selector(\n                        store.getState(),\n                        prevSelection);\n\n                if (prevSelection !== selection) {\n                    prevSelections.set(selectorListener, selection);\n                    selectorListener.listener(selection, store, prevSelection);\n                }\n            } catch (e) {\n            }\n        }\n    }\n\n    register(selector: Selector, listener: Listener) {\n        this._selectorListeners.add({\n            listener,\n            selector\n        });\n    }\n\n    subscribe(store: Store<*, *>) {\n        if (this._selectorListeners.size) {\n            store.subscribe(\n                this._listener.bind(\n                    this,\n                    {\n                        prevSelections: new Map(),\n                        store\n                    }));\n        }\n    }\n}\n\nexport default new StateListenerRegistry();","/* @flow */\n\nimport { combineReducers } from 'redux';\nimport type { Reducer } from 'redux';\n\n/**\n * The type of the dictionary/map which associates a reducer (function) with the\n * name of he Redux state property managed by the reducer.\n */\ndeclare type NameReducerMap<S, A> = { [name: string]: Reducer<S, A> };\n\n/**\n * A registry for Redux reducers, allowing features to register themselves\n * without needing to create additional inter-feature dependencies.\n */\nclass ReducerRegistry {\n    _elements: NameReducerMap<*, *>;\n\n    /**\n     * Creates a ReducerRegistry instance.\n     */\n    constructor() {\n        /**\n         * The set of registered reducers, keyed based on the field each reducer\n         * will manage.\n         *\n         * @private\n         * @type {NameReducerMap}\n         */\n        this._elements = {};\n    }\n\n    /**\n     * Combines all registered reducers into a single reducing function.\n     *\n     * @param {Object} [additional={}] - Any additional reducers that need to be\n     * included (such as reducers from third-party modules).\n     * @returns {Function}\n     */\n    combineReducers(additional: NameReducerMap<*, *> = {}) {\n        // $FlowExpectedError\n        return combineReducers({\n            ...this._elements,\n            ...additional\n        });\n    }\n\n    /**\n     * Adds a reducer to the registry.\n     *\n     * The method is to be invoked only before {@link #combineReducers()}.\n     *\n     * @param {string} name - The field in the state object that will be managed\n     * by the provided reducer.\n     * @param {Reducer} reducer - A Redux reducer.\n     * @returns {void}\n     */\n    register(name: string, reducer: Reducer<*, *>) {\n        this._elements[name] = reducer;\n    }\n}\n\n/**\n * The public singleton instance of the ReducerRegistry class.\n */\nexport default new ReducerRegistry();\n","/* @flow */\n\nimport { applyMiddleware } from 'redux';\nimport type { Middleware } from 'redux';\n\n/**\n * A registry for Redux middleware, allowing features to register their\n * middleware without needing to create additional inter-feature dependencies.\n */\nclass MiddlewareRegistry {\n    _elements: Array<Middleware<*, *>>;\n\n    /**\n     * Creates a MiddlewareRegistry instance.\n     */\n    constructor() {\n        /**\n         * The set of registered middleware.\n         *\n         * @private\n         * @type {Middleware[]}\n         */\n        this._elements = [];\n    }\n\n    /**\n     * Applies all registered middleware into a store enhancer.\n     * (@link http://redux.js.org/docs/api/applyMiddleware.html).\n     *\n     * @param {Middleware[]} additional - Any additional middleware that need to\n     * be included (such as middleware from third-party modules).\n     * @returns {Middleware}\n     */\n    applyMiddleware(...additional: Array<Middleware<*, *>>) {\n        // $FlowExpectedError\n        return applyMiddleware(...this._elements, ...additional);\n    }\n\n    /**\n     * Adds a middleware to the registry.\n     *\n     * The method is to be invoked only before {@link #applyMiddleware()}.\n     *\n     * @param {Middleware} middleware - A Redux middleware.\n     * @returns {void}\n     */\n    register(middleware: Middleware<*, *>) {\n        this._elements.push(middleware);\n    }\n}\n\n/**\n * The public singleton instance of the MiddlewareRegistry class.\n */\nexport default new MiddlewareRegistry();\n","import { ReducerRegistry }  from '../base/redux';\nlet stateDefault = {\n    userInfo: null\n\n}\n\nReducerRegistry.register('xtool/app', (state = stateDefault, action) => {\n    switch (action.type) {\n        case \"CHANGE_USERINFO\":\n            return {\n                ...state,\n                userInfo: {...state.userInfo,...action.userInfo}\n            }\n\n        case \"CHANGE_PAGE\":\n            return {\n                ...state,\n                page: action.page\n            }\n        case \"LOGOUT\":\n            return {\n                ...stateDefault,\n\n            }\n        default:\n            return state;\n    }\n});","export function get(url, token=\"\", param={}, type=\"\"){\n    return new Promise(function(resolve,reject){\n        fetch( url , {\n            method: \"GET\",\n            headers: {\n                'Access-Control-Allow-Origin':'*',\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\" : \"Bearer \"+token\n            },\n            mode: 'cors'\n        }).then(function(response) {\n            if(response.status === 200){\n                return response.json();\n            }else{\n                resolve({success: false});\n            }\n        }).then(function(response){\n            resolve(response);\n        }).catch(err=>{\n            reject({success: false, err});\n        });\n    });\n}\n\nexport function post(url, token=\"\", param, type){\n    return new Promise(function(resolve,reject){\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\" : \"Bearer \"+token\n            },\n            body: JSON.stringify( param )\n        }).then(function(response) {\n            if(response.status === 200){\n                return response.json();\n            }else{\n                return {};\n            }\n        }).then(function(response){\n            resolve(response);\n        }).catch(err=>{\n            reject({success: false, err});\n        });\n    });\n}","import { post }     from './../base/portal';\n\nexport function getLocalstorage( key){\n    return localStorage.getItem(key);\n}\n\nexport function setLocalstorage( key, value){\n    localStorage.setItem(key, value);\n}\n\nexport function removeLocalstorage( key){\n    localStorage.removeItem(key);\n}\n\nexport function loginApi(username='', password='') {\n    let params = {\n        username,\n        password\n    }\n    return post('https://vcrxapitester.topica.vn/api/user/login', \"\", params, \"\" )\n}","let config = {\n    localstorageKey : {\n        userinfo : 'userInfo'\n    },\n    \n    system: {\n        vietnam: 'NVN',\n        thailand: 'NTL'\n    },\n    role:{\n        \"teacher\"   : \"TEACHER\",\n        \"gv\"        : \"GV\",\n        \"student\"   : \"STUDENT\",\n        \"po\"        : \"PO\",\n        \"assistant\" : \"ASSISTANT\",\n        \"mb\"        : \"MB\",\n        \"hv\"        : \"HV\",\n        \"tg\"        : \"TG\"\n    },\n    domain : {\n        api: 'https://vcrxapitester.topica.vn',\n       socket: 'https://vcrxsocket.topica.vn/',\n       media: 'mediasuper.topica.vn',\n       mediaSendmessage: 'mediauni.topica.vn',\n       xtool: 'http://xtooldev8.topica.vn',\n       thailand: {\n           api: 'https://vcrxapitester.topica.vn',\n           lms: 'https://lms40ntltester.topica.vn',\n           meet: 'https://vcrxntltester.topica.vn'\n       },\n       vietnam: {\n           api: 'https://vcrxapitester.topica.vn',\n           lms: 'http://dev16lmspoco.topicanative.edu.vn',\n           meet: 'https://vcrxnvntester.topica.vn',\n       }\n    },\n}\n\nexport default config;\n","import{\n    loginApi, setLocalstorage\n}                           from './apis';\n\nimport config               from'../config';\n\nexport function changeUserinfo(userInfo){\n    return {\n        type        : \"CHANGE_USERINFO\",\n        userInfo\n    };\n}\n\nexport function logout(){\n    return {\n        type        : \"LOGOUT\"\n    };\n}\n\nexport function changePage(page){\n    return {\n        type        : \"CHANGE_PAGE\",\n        page\n    };\n}\n\nexport function updateUserInfo(userInfo){\n    return function (dispatch, getState){\n        dispatch(changeUserinfo(userInfo));\n    }\n}\n\nexport function submitLogout(){\n    localStorage.removeItem(config.localstorageKey.userinfo);\n}\n\nexport function login(username,password){\n    return function( dispatch, getState ) {\n        let state = getState();\n        loginApi( username,password ).then((loginResult)=>{\n            let {accessToken: tokenApi, username, participantId, displayName, roleName: role} = loginResult.result;  \n            let system = \"\";\n            if(loginResult.status) {\n                switch(loginResult.result.systemType) {\n                    case config.system.vietnam:\n                        system = config.system.vietnam;\n                        setLocalstorage(config.localstorageKey.userinfo,JSON.stringify({tokenApi, system, username, participantId, displayName, role}));\n                        dispatch(changeUserinfo({tokenApi, system, username, participantId, displayName, role}));\n                        break;\n                    case config.system.thailand:\n                        system = config.system.thailand;\n                        setLocalstorage(config.localstorageKey.userinfo,JSON.stringify({tokenApi, system, username, participantId, displayName, role}));\n                        dispatch(changeUserinfo({tokenApi,system, username, participantId, displayName, role}));\n                        break;\n                    default:\n                        break;\n                }\n            } else {\n                alert(\"Error\");\n            }\n        });\n    }\n}\n","import React                        from 'react';\nimport { connect }                  from 'react-redux';\nimport {\n    login\n}                                   from '../actions';\nimport { Redirect }                 from 'react-router-dom';\n\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username : \"\",\n            password : \"\"\n        }\n        if (this.props.userInfo) { \n            this.props.history.push('/');\n        }\n        this.submitLogin    = this.submitLogin.bind(this);\n    }\n\n    submitLogin() {\n        if(this.state.username !== \"\" && this.state.password !== \"\"){\n            this.props.dispatch(login(this.state.username, this.state.password));\n        }else{\n            alert(\"Sai thông tin đăng nhập!\");\n        }\n    }\n\n    changeUsername = (e) => {\n        this.setState({username: e.target.value})\n    }\n\n    changePassword = (e) => {\n        this.setState({password: e.target.value})\n    }\n\n    render(){\n        if(this.props.userInfo){\n            return <Redirect to={{ pathname: '/' }} />\n        }\n        return(\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                <div>\n                    <div>\n                        <label>Username</label>\n                        <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.changeUsername}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.changePassword}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\" onClick={this.submitLogin} >Login</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n        userInfo: state['xtool/app'].userInfo\n\t};\n}\nexport default connect(_mapStateToPropsTop)(Login);\n","import React                        from 'react';\nimport { connect }                  from 'react-redux';\n\nclass Homepage extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div>\n                <p>Home</p>\n            </div>\n        )\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n\t};\n}\nexport default connect(_mapStateToPropsTop)(Homepage);\n","import React                        from 'react';\nimport { connect }                  from 'react-redux';\n\nclass Admin extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <p>Admin</p>\n        )\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n\t};\n}\nexport default connect(_mapStateToPropsTop)(Admin);\n","import React, { Component } from 'react';\nimport { Link }            \tfrom 'react-router-dom';\nimport { connect }          from 'react-redux';\nimport { Redirect }         from 'react-router-dom';\nimport $                    from  'jquery';\nimport { \n    submitLogout\n }                          from '../actions';\n\nclass Header extends React.Component {\n    constructor(props) {\n         super(props);\n        this.toggleNav      = this.toggleNav.bind(this);\n        this.confirmLogout  = this.confirmLogout.bind(this);\n        this.toggle         = this.toggle.bind(this);\n    }\n        componentWillMount(){\n        switch (this.props.page){\n            case \"DASHBOARD\" :\n            $('title').html(\"Trang chủ\");\n            break;\n            case \"RENDERLINK\" :\n            $('title').html(\"Tạo link nhanh\");\n            break;\n            case \"MANAGEVCRX\" :\n            $('title').html(\"Vận hành lớp học\");\n            break;\n            case \"CHECKLOG\" :\n            $('title').html(\"Log lớp học\");\n            break;\n            case \"LOGAPI\" :\n            $('title').html(\"Log API\");\n            break;\n        }\n    }\n\n    toggle(){\n        $(\"#profileMenu\").toggle();\n        return false;\n    }\n\n    toggleNav(){\n        $(\"#sideNav\").toggleClass(\"hide\");\n        $(\".mg-left\").toggleClass(\"mg-left0\");\n    }\n\n    confirmLogout(){\n        this.props.dispatch(submitLogout());\n    }\n\n    render() {\n            if(!this.props.userInfo){\n                return <Redirect to={{ pathname: '/login' }} />\n            }\n            return (\n                <header id=\"js-header\" className=\"u-header u-header--sticky-top\">\n                    <div className=\"u-header__section u-header__section--admin-dark g-min-height-65\">\n                        <nav className=\"navbar no-gutters g-pa-0\">\n                            <div className=\"col-auto d-flex flex-nowrap u-header-logo-toggler g-py-12\">\n                                <a href=\"../index.html\" className=\"navbar-brand d-flex align-self-center g-hidden-xs-down g-line-height-1 py-0 g-mt-5\">\n                                    <img className = \"logo-vcrx\" src = \"./images/logo.png\" alt = \"logo\"/>\n                                </a>\n                                <div className = \"box_menu\">\n                                    <i onClick = {this.toggleNav} className=\"toggle_nav fa fa-bars\"></i>\n                                </div>\n                            </div>\n                            <div className=\"col-auto d-flex g-py-12 g-pl-40--lg ml-auto\">\n                                <a id=\"searchInvoker\" className=\"g-hidden-sm-up text-uppercase u-header-icon-v1 g-pos-rel g-width-40 g-height-40 rounded-circle g-font-size-20\" href=\"#!\" aria-controls=\"searchMenu\" aria-haspopup=\"true\" aria-expanded=\"false\" data-is-mobile-only=\"true\" data-dropdown-event=\"click\" data-dropdown-target=\"#searchMenu\" data-dropdown-type=\"css-animation\" data-dropdown-duration=\"300\" data-dropdown-animation-in=\"fadeIn\" data-dropdown-animation-out=\"fadeOut\">\n                                    <i className=\"hs-admin-search g-absolute-centered\"></i>\n                                </a>\n\n                                <div className=\"col-auto d-flex g-pt-5 g-pt-0--sm g-pl-10 g-pl-20--sm\">\n                                    <div className=\"g-pos-rel g-px-10--lg\">\n                                        <a id=\"profileMenuInvoker\" onClick={this.toggle} className=\"d-block\" href=\"javascript:void()\" aria-controls=\"profileMenu\" aria-haspopup=\"true\" aria-expanded=\"false\" data-dropdown-event=\"click\" data-dropdown-target=\"#profileMenu\" data-dropdown-type=\"css-animation\" data-dropdown-duration=\"300\" data-dropdown-animation-in=\"fadeIn\" data-dropdown-animation-out=\"fadeOut\">\n                                        <span className=\"g-pos-rel\">\n                                            <span className=\"u-badge-v2--xs u-badge--top-right g-hidden-sm-up g-bg-lightblue-v5 g-mr-5\"></span>\n                                            <img className=\"g-width-30 g-width-40--md g-height-30 g-height-40--md rounded-circle g-mr-10--sm\" src=\"../assets/img-temp/130x130/img1.jpg\" alt=\"Image description\"/>\n                                        </span>\n                                            <span className=\"g-pos-rel g-top-2\">\n                                            <span className=\"g-hidden-sm-down\">{this.props.userInfo.username+ \" - \" + this.props.userInfo.system}</span>\n                                            <i className=\"hs-admin-angle-down g-pos-rel g-top-2 g-ml-10\"></i>\n                                        </span>\n                                        </a>\n                                        <ul id=\"profileMenu\" className=\"g-pos-abs g-left-0 g-width-100x--lg g-nowrap g-font-size-14 g-py-20 g-mt-17 rounded u-dropdown--css-animation fadeIn\" aria-labelledby=\"profileMenuInvoker\">\n                                            <li className=\"g-hidden-sm-up g-mb-10\">\n                                                <a className=\"media g-py-5 g-px-20\" href=\"#!\">\n                                                <span className=\"d-flex align-self-center g-pos-rel g-mr-12\">\n                                                    <span className=\"u-badge-v1 g-top-minus-3 g-right-minus-3 g-width-18 g-height-18 g-bg-secondary g-font-size-10 g-color-white rounded-circle p-0\">10</span>\n                                                    <i className=\"hs-admin-comment-alt\"></i>\n                                                </span>\n                                                    <span className=\"media-body align-self-center\">Unread Messages</span>\n                                                </a>\n                                            </li>\n                                            <li className=\"g-hidden-sm-up g-mb-10\">\n                                                <a className=\"media g-py-5 g-px-20\" href=\"#!\">\n                                                <span className=\"d-flex align-self-center g-mr-12\">\n                                                <i className=\"hs-admin-bell\"></i>\n                                                </span>\n                                                    <span className=\"media-body align-self-center\">Notifications</span>\n                                                </a>\n                                            </li>\n                                            <li className=\"g-mb-10\">\n                                                <a className=\"media g-color-primary--hover g-py-5 g-px-20\" href=\"#!\">\n                                                <span className=\"d-flex align-self-center g-mr-12\">\n                                                    <i className=\"fa fa-user\"></i>\n                                                </span>\n                                                    <span onClick={this.confirmLogout} className=\"media-body align-self-center\">Thông tin cá nhân</span>\n                                                </a>\n                                            </li>\n                                            <li className=\"g-mb-10\">\n                                                <a className=\"media g-color-primary--hover g-py-5 g-px-20\" href=\"/login\">\n                                                <span className=\"d-flex align-self-center g-mr-12\">\n                                                    <i className=\"fa fa-sign-out\"></i>\n                                                </span>\n                                                    <span onClick={this.confirmLogout} className=\"media-body align-self-center\">Đăng xuất</span>\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </nav>\n                    </div>\n                </header>\n            );\n        }\n    }\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n        userInfo: state['xtool/app'].userInfo\n\t};\n}\nexport default connect(_mapStateToPropsTop)(Header);\n","import React, { Component } from 'react';\nimport { Link }            \tfrom 'react-router-dom';\nimport { connect }          from 'react-redux';\nimport { changePage }       from '../actions';\nimport { Redirect }                 from 'react-router-dom';\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    activePage(page){\n        this.props.dispatch(changePage(page));\n    }\n\n    render() {\n        let cssClass = \"media u-side-nav--top-level-menu-link u-side-nav--hide-on-hidden g-px-15 g-py-12\";\n        let cssClassActive = \"media u-side-nav--top-level-menu-link u-side-nav--hide-on-hidden g-px-15 g-py-12 active\";\n        if(!this.props.userInfo){\n            return <Redirect to={{ pathname: '/login' }} />\n        }\n        return (\n            <div id=\"sideNav\" className=\"col-auto u-sidebar-navigation-v1 u-sidebar-navigation--dark\">\n                <div className=\"\">\n                    <div id=\"accordion\" className=\"\">\n                        <div className=\"card1\">\n                            <div className=\"\">\n                                <Link onClick = {this.activePage.bind(this,\"DASHBOARD\")} className= {this.props.page == \"DASHBOARD\" ? cssClassActive :cssClass} to={'/'} >\n                                    <span className=\"d-flex align-self-center g-pos-rel g-font-size-18 g-mr-18\">\n                                        <i className=\"hs-admin-server\"></i>\n                                    </span>\n                                    <span className=\"media-body align-self-center\">{\"Trang chủ\"}</span>\n                                    <span className=\"u-side-nav--has-sub-menu__indicator\"></span>\n                                </Link>\n                            </div>\n                        </div>\n\n                        <div className=\"card1\">\n                            <div className=\"\">\n                                <a className=\"collapsed card-link media u-side-nav--top-level-menu-link u-side-nav--hide-on-hidden g-px-15 g-py-12\" data-toggle=\"collapse\" href=\"#collapseTwo\">\n                                    <span className=\"d-flex align-self-center g-pos-rel g-font-size-18 g-mr-18\">\n                                        <i className=\"hs-admin-server\"></i>\n                                    </span>\n                                    <span className=\"media-body align-self-center\">{\"Công cụ\"}</span>\n                                </a>\n                            </div>\n                            <div id=\"collapseTwo\" className={this.props.page == \"RENDERLINK\" ? \"collapse show\": \"collapse\"} data-parent=\"#accordion\">\n                                <Link  onClick = {this.activePage.bind(this,\"RENDERLINK\")} className= {this.props.page == \"RENDERLINK\" ? cssClassActive :cssClass} to={'/xtool'} >\n                                    <span className=\"media-body align-self-center\">{\"Tạo Link nhanh\"}</span>\n                                    <span className=\"u-side-nav--has-sub-menu__indicator\"></span>\n                                    <span className=\"caret\"></span>\n                                </Link>\n                                <Link  onClick = {this.activePage.bind(this,\"LOGSCONNECTION\")} className= {this.props.page == \"LOGSCONNECTION\" ? cssClassActive :cssClass} to={'/logs'} >\n                                            <span className=\"media-body align-self-center\">Logs connection</span>\n                                            <span className=\"u-side-nav--has-sub-menu__indicator\"></span>\n                                            <span className=\"caret\"></span>\n                                </Link>\n                                <Link  onClick = {this.activePage.bind(this,\"OPENCLASS\")} className= {this.props.page == \"OPENCLASS\" ? cssClassActive :cssClass} to={'/openclass'} >\n                                    <span className=\"media-body align-self-center\">Mở lớp</span>\n                                    <span className=\"u-side-nav--has-sub-menu__indicator\"></span>\n                                    <span className=\"caret\"></span>\n                                </Link>\n                                <Link  onClick = {this.activePage.bind(this,\"ERROROPENCLASS\")}\n                                       to={'/status'} >\n                                    <span className=\"media-body align-self-center\">Error logs</span>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n        userInfo: state['xtool/app'].userInfo\n\t};\n}\nexport default connect(_mapStateToPropsTop)(Sidebar);","import React, { Component }                             from 'react';\nimport { connect }                                      from 'react-redux';\nimport { submitRenderLink, submitRenderLinks, \n    submitRenderLinkFromIdUser, changePage\n}                                                       from '../actions';\n\nclass Xtool extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idroom: \"\",\n            iduser: \"\"\n        }\n        this.submitRenderLink = this.submitRenderLink.bind(this);\n    }\n    componentWillMount(){\n        this.props.dispatch(changePage(\"RENDERLINK\"));\n    }\n\n    submitRenderLink(){\n       \n    }\n\n    render() {\n        return (\n            <div className=\"col-xl-7 col-lg-7 col-md-12 col-sm-12 col-12 xtool-renderlink mg-left\">\n                <p>Xtool</p>\n            </div>    \n        );\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\n}\nexport default connect(_mapStateToPropsTop)(Xtool);","import React                        from 'react';\nimport { connect }                  from 'react-redux';\nimport { Redirect }                 from 'react-router-dom';\n\nclass PrivateComponent extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        \n        if(!this.props.userInfo){\n            return <Redirect to={{ pathname: '/login' }} />\n        }\n\n        if ((this.props.roles && this.props.roles.indexOf(this.props.userInfo.role) === -1) && (this.props.userIds && this.props.userIds.indexOf(this.props.userInfo.id) === -1) ) {\n            return <Redirect to={{ pathname: '/'}} />\n        }\n\n        return(\n            <>\n                {this.props.children}\n            </>  \n        )\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n        userInfo: state['xtool/app'].userInfo\n\t};\n}\nexport default connect(_mapStateToPropsTop)(PrivateComponent);\n","import { ReducerRegistry }  from '../base/redux';\r\nlet stateDefault = {\r\n    logs: [],\r\n    roomLogs: [],\r\n    userLogs: []\r\n}\r\n\r\nReducerRegistry.register('logs', (state = stateDefault, action) => {\r\n    switch (action.type) {\r\n        case \"GET_LOGS\":\r\n            return {\r\n                ...state,\r\n                logs: action.logs\r\n            };\r\n        case \"GET_LOGS_BY_ROOM_ID\":\r\n            return {\r\n                ...state,\r\n                roomLogs: action.roomLogs\r\n            };\r\n        case \"GET_LOGS_BY_USER_ID\":\r\n            return {\r\n                ...state,\r\n                userLogs: action.userLogs\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n});","import {\r\n    getLogsApi, getByRoomIdApi, getByUserIdApi\r\n}                           from './apis';\r\n\r\nfunction getLogInfo(logs) {\r\n    return {\r\n        type: \"GET_LOGS\",\r\n        logs\r\n    }\r\n}\r\n\r\nfunction getLogInfoByRoomId(roomLogs) {\r\n    return {\r\n        type: \"GET_LOGS_BY_ROOM_ID\",\r\n        roomLogs\r\n    }\r\n}\r\n\r\nfunction getLogInfoByUserId(userLogs) {\r\n    return {\r\n        type: \"GET_LOGS_BY_USER_ID\",\r\n        userLogs\r\n    }\r\n}\r\n\r\nexport function getLogs() {\r\n    return function (dispatch, getState) {\r\n        getLogsApi().then((logs) => {\r\n            dispatch(getLogInfo(logs))\r\n        })\r\n    }\r\n}\r\n\r\nexport function getByRoomId(roomId) {\r\n    return function (dispatch, getState) {\r\n        getByRoomIdApi(roomId).then((roomLogs) => {\r\n            dispatch(getLogInfoByRoomId(roomLogs))\r\n        })\r\n    }\r\n}\r\n\r\nexport function getByUserId(userId) {\r\n    return function (dispatch, getState) {\r\n        getByUserIdApi(userId).then((userLogs) => {\r\n            dispatch(getLogInfoByUserId(userLogs))\r\n        })\r\n    }\r\n}","import { get} from \"../base/portal\";\r\n\r\nexport function getLogsApi() {\r\n    return get(\"/listenLogs/apiListenLogs\", \"\", \"GET_LOGS\")\r\n}\r\n\r\nexport function getByRoomIdApi(roomId) {\r\n    return get(\"/listenLogs/apiGetLogsByRoomId?roomId=\"+roomId, \"\", \"GET_LOGS_BY_ROOM_ID\")\r\n}\r\n\r\nexport function getByUserIdApi(userId) {\r\n    return get(\"/listenLogs/apiGetLogsByUserId?userId=\"+userId, \"\", \"GET_LOGS_BY_USER_ID\")\r\n}","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getLogs, getByRoomId, getByUserId} from \"../actions\";\r\n\r\nclass UnListening extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoad: false,\r\n            isRoomLoad: false,\r\n            isUserLoad: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(getLogs())\r\n    }\r\n\r\n    loadLogs = () => {\r\n        this.setState({...this.state, isLoad: true, isRoomLoad: false, isUserLoad: false})\r\n        this.props.dispatch(getLogs())\r\n    };\r\n\r\n    setRoomId = (e) => {\r\n        this.setState({...this.state, roomId: e.target.value})\r\n    };\r\n\r\n    setUserId = (e) => {\r\n        this.setState({...this.state, userId: e.target.value})\r\n    };\r\n\r\n    findByRoomID = () => {\r\n        let roomId = this.state.roomId;\r\n        if (roomId) {\r\n            this.props.dispatch(getByRoomId(roomId));\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            isLoad: false,\r\n            isRoomLoad: true,\r\n            isUserLoad: false\r\n        })\r\n    };\r\n\r\n    findByUserID = () => {\r\n        let userId = this.state.userId;\r\n        if (userId) {\r\n            this.props.dispatch(getByUserId(userId));\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            isLoad: false,\r\n            isRoomLoad: false,\r\n            isUserLoad: true\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let statusLogs = [];\r\n        if(this.state.isLoad) statusLogs = this.props.logs;\r\n        else if(this.state.isRoomLoad) statusLogs = this.props.roomLogs;\r\n        else if(this.state.isUserLoad) statusLogs = this.props.userLogs;\r\n        return (\r\n                <div className=\"col-12 open-class xtool-renderlink mg-left\">\r\n                    <div className=\"box-xtool\">\r\n                        <div className=\"form-row align-items-center\">\r\n                            <div className=\"col-auto\">\r\n                                <label className=\"sr-only\" htmlFor=\"room-id\">Room Id</label>\r\n                                <div className=\"input-group mb-2\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">Room Id</div>\r\n                                    </div>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"room-id\"\r\n                                           onChange={this.setRoomId}\r\n                                           min=\"1\" maxLength=\"10\" placeholder=\"Nhập room ID\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <button type=\"submit\" onClick={this.findByRoomID} className=\"btn btn-info mb-2\">Find by\r\n                                    RoomId\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-auto col-md-1\">\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <label className=\"sr-only\" htmlFor=\"room-id\">User Id</label>\r\n                                <div className=\"input-group mb-2\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">User Id</div>\r\n                                    </div>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"user-id\"\r\n                                           onChange={this.setUserId}\r\n                                           min=\"1\" maxLength=\"10\" placeholder=\"Nhập user ID\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <button type=\"submit\" onClick={this.findByUserID} className=\"btn btn-danger mb-2\">Find\r\n                                    by UserId\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row align-items-center\">\r\n                            <br/><br/>\r\n                            <div className=\"col-auto\">\r\n                                <label className=\"sr-only\">Load all opening rooms</label>\r\n                                <button type=\"button\" onClick={this.loadLogs} className=\"btn btn-success\">Load all\r\n                                </button>\r\n                                <br/>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            statusLogs.length === 0 ?\r\n                                    this.state.isLoad &&\r\n                                    <h2>No data display</h2>\r\n                                    :\r\n                                    statusLogs.map((log, i) => {\r\n                                        return (\r\n                                                <div>\r\n                                                    <div className=\"row p-3 mb-2 bg-info text-white\">\r\n                                                        <p className=\"font-weight-bold\">Room\r\n                                                            Id:</p>&nbsp;&nbsp;&nbsp;{log._id}\r\n                                                    </div>\r\n                                                    <table className=\"table table-bordered\">\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th>User Id</th>\r\n                                                            <th>User Name</th>\r\n                                                            <th>System</th>\r\n                                                            <th>Status Now</th>\r\n                                                            <th>\r\n                                                                Time\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {log.usersLog.map((u, i) => {\r\n                                                            return (\r\n                                                                    <tr>\r\n                                                                        <th>\r\n                                                                            <div className=\"justify-content-center small font-weight-bold\">\r\n                                                                                {u._id.userId}\r\n                                                                            </div>\r\n                                                                        </th>\r\n                                                                        <td>\r\n                                                                            <div className=\"justify-content-center small font-weight-bold\">\r\n                                                                                {u._id.userName}\r\n                                                                            </div>\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            <div className=\"justify-content-center small font-weight-bold\">\r\n                                                                                {u._id.system === 'NVN' ? 'Web' : 'Mobile'}\r\n                                                                            </div>\r\n                                                                        </td>\r\n                                                                        {\r\n                                                                            u.data[0].status ?\r\n                                                                                    <td bgcolor=\"#00cc00\">\r\n                                                                                        <div className=\"justify-content-center text-white small font-weight-bold\">\r\n                                                                                            {u.data[0].download}\r\n                                                                                        </div>\r\n                                                                                    </td>\r\n                                                                                    :\r\n                                                                                    <td bgcolor=\"#cc0000\">\r\n                                                                                        <div className=\"justify-content-center text-white small font-weight-bold\">\r\n                                                                                            {u.data[0].download}\r\n                                                                                        </div>\r\n                                                                                    </td>\r\n                                                                        }\r\n                                                                        <td className=\"bg-white\">\r\n                                                                            <div className=\"row justify-content-center\">\r\n                                                                                {u.data.length === 0 ?\r\n                                                                                        <p className=\"font-weight-bold text-sm-center\">\r\n                                                                                            No data display\r\n                                                                                        </p>\r\n                                                                                        :\r\n                                                                                        u.data.map((status, i) => {\r\n                                                                                            return (\r\n                                                                                                    <table className=\"table-striped\">\r\n                                                                                                        <thead>\r\n                                                                                                        <tr className=\"bg-white\">\r\n                                                                                                            <th className=\" small font-weight-bold\">{new Intl.DateTimeFormat('vi-VI',\r\n                                                                                                                    {\r\n                                                                                                                        minute: '2-digit',\r\n                                                                                                                        second: '2-digit'\r\n                                                                                                                    }).format(status.timeCreated)\r\n                                                                                                            }</th>\r\n                                                                                                        </tr>\r\n                                                                                                        </thead>\r\n                                                                                                        <tbody>\r\n                                                                                                        <tr>\r\n                                                                                                            {\r\n                                                                                                                status.status ?\r\n                                                                                                                        <td bgcolor=\"#00cc00\"\r\n                                                                                                                            className=\"text-white small font-weight-bold\">\r\n                                                                                                                            {status.download}\r\n                                                                                                                        </td>\r\n                                                                                                                        :\r\n                                                                                                                        <td bgcolor=\"#cc0000\"\r\n                                                                                                                            className=\"text-white small font-weight-bold\">\r\n                                                                                                                            {status.download}\r\n                                                                                                                        </td>\r\n                                                                                                            }\r\n                                                                                                        </tr>\r\n                                                                                                        </tbody>\r\n                                                                                                    </table>\r\n\r\n                                                                                            );\r\n                                                                                        })\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                        )\r\n                                                ;\r\n                                    })\r\n                        }\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction _mapStateToPropsTop(state) {\r\n    return {\r\n        logs: state['logs'].logs,\r\n        roomLogs: state['logs'].roomLogs,\r\n        userLogs: state['logs'].userLogs\r\n    };\r\n}\r\n\r\nexport default connect(_mapStateToPropsTop)(UnListening);\r\n","import { ReducerRegistry }  from '../base/redux';\nlet stateDefault = {\n    page: \"DASHBOARD\",\n    listlog: []\n}\n\nReducerRegistry.register('xtool/logconnection', (state = stateDefault, action) => {\n    switch (action.type) {\n        case \"CHANGE_PAGE\":\n            return {\n                ...state,\n                page: action.page\n            }\n        case \"GET_LOG_INFO\":\n                return {\n                    ...state,\n                    listlog: action.listlog\n                }\n        default:\n            return state;\n    }\n});\n","import React, { Component }                     from 'react';\nimport { connect }                              from 'react-redux';\n\nclass ConnectionQuality extends Component {\n    render() {\n        return (\n            <table id=\"example\" className=\"table table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>STT</th>\n                        <th>Room ID</th>\n                        <th>System</th>\n                        <th>Type</th>\n                        <th>Time</th>\n                        <th>User Id</th>\n                        <th>Web/app</th>\n                        <th>Download</th>\n                        <th>Upload</th>\n                        <th>Connection Quality</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {   this.props.logs.length !=0 &&\n                        this.props.logs.map((log, index) => {\n                            var date = new Date(log.timeCreated);\n                            let hours = date.getHours();\n                            let minutes = \"0\" + date.getMinutes();\n                            let seconds = \"0\" + date.getSeconds();\n                            let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n                            return(\n                                <tr key = {index}>\n                                    <td>{index + 1}</td>\n                                    <td>{log.data.roomId}</td>\n                                    <td>{log.system}</td>\n                                    <td>{log.type}</td>\n                                    <td>{formattedTime}</td>\n                                    <td>{log.data.userId}</td>\n                                    <td>{log.data.system}</td>\n                                    <td>{log.data.bitrate ? log.data.bitrate.download : \"\"}</td>\n                                    <td>{log.data.bitrate ? log.data.bitrate.upload : \"\"}</td>\n                                    <td>{log.data.connectionQuality}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                    {\n                        this.props.logs.length == 0 &&\n                        <tr>\n                            <td colSpan = \"10\">Không có log với mã lớp này!</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>     \n        );\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n\t};\n}\n\nexport default connect(_mapStateToPropsTop)(ConnectionQuality);","import React, { Component }                     from 'react';\nimport { connect }                              from 'react-redux';\n\nclass InfoDevice extends Component {\n    render() {\n        return (\n            <table id=\"example\" className=\"table table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>STT</th>\n                        <th>Room ID</th>\n                        <th>System</th>\n                        <th>Type</th>\n                        <th>Time</th>\n                        <th>User Id</th>\n                        <th>Web/app</th>\n                        <th>Hệ điều hành</th>\n                        <th>Trình duyệt</th>\n                        <th>Phiên bản trình duyệt</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {   this.props.logs.length !=0 &&\n                        this.props.logs.map((log, index) => {\n                            var date = new Date(log.timeCreated);\n                            let hours = date.getHours();\n                            let minutes = \"0\" + date.getMinutes();\n                            let seconds = \"0\" + date.getSeconds();\n                            let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n                            return(\n                                <tr key = {index}>\n                                    <td>{index + 1}</td>\n                                    <td>{log.data.roomId}</td>\n                                    <td>{log.system}</td>\n                                    <td>{log.type}</td>\n                                    <td>{formattedTime}</td>\n                                    <td>{log.data.userId}</td>\n                                    <td>{log.data.system}</td>\n                                    <td>{log.data.OS ? log.data.OS : log.data.brand}</td>\n                                    <td>{log.data.browser == \"coc_coc_browser\" ? \"Cốc cốc\" : (log.system == \"VCRXCONNECT\" ? log.data.systemName + \" - \" + log.data.deviceId : log.data.browser)}\n                                    </td>\n                                    <td>{log.system == \"VCRXCONNECT\" ? log.data.systemVersion : log.data.browserVersion}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                    {\n                        this.props.logs.length == 0 &&\n                        <tr>\n                            <td colSpan = \"10\">Không có log với mã lớp này!</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>     \n        );\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n\t};\n}\n\nexport default connect(_mapStateToPropsTop)(InfoDevice);","import {\n    getLogApi\n}                           from './apis';\n\nexport function changePage(page){\n    return {\n        type        : \"CHANGE_PAGE\",\n        page\n    };\n}\n\nexport function getLogInfo(listlog){\n    return {\n        type        : \"GET_LOG_INFO\",\n        listlog\n    }; \n}\n\nexport function getLog(type, roomid, userid, limit){\n    return function( dispatch, getState ){\n        getLogApi(type, roomid,userid,  limit).then(listlog =>{\n            dispatch(getLogInfo(listlog));\n        });\n    }\n}","\n\nexport function getLogApi(type, roomid, userid, limit) {\n    let url = \"\";\n    if(userid){\n        url = \"https://xtooldev8.topica.vn/api/infologs?type=\" + type + \"&roomId=\" + roomid + \"&userId=\" + userid + \"&limit=\" + limit;\n    }\n    else{\n        url = \"https://xtooldev8.topica.vn/api/infologs?type=\" + type + \"&roomId=\" + roomid + \"&limit=\" + limit;\n    }\n    return new Promise((resolve,reject) => {\n        fetch(url).then(response => \n\t\t    response.json().then(listlog => ({\n\t\t        listlog: listlog,\n\t\t        status: response.status\n\t\t    })\n\t\t).then(res => {\n            resolve(res.listlog)\n\t\t}).catch(error => reject(error)));   \n    })\n}","import React, { Component }                     from 'react';\nimport { connect }                              from 'react-redux';\nimport $                                        from 'jquery';\nimport ConnectionQuality                        from './ConnectionQuality';\nimport InfoDevice                               from './InfoDevice';\n\n\nimport { getLog, changePage }                               from '../actions';\n\nvar logTypes = [\n    'CONNECTION_QUALITY',\n    'INFO_DEVICE'\n]\n\nclass LogInfo extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            logs : [],\n            logType: \"CONNECTION_QUALITY\",\n            roomId: \"\",\n            userId: \"\",\n            reload: false\n        }\n    }\n\n    componentWillMount(){\n        this.props.dispatch(changePage(\"LOGSCONNECTION\"));\n\n    }\n\n    componentDidMount(){\n        let this1 = this;\n        $('input[type=\"checkbox\"]').click(function(){\n            if($(this).prop(\"checked\") == true){\n                this1.setState({reload : true});\n            }\n            else if($(this).prop(\"checked\") == false){\n                this1.setState({reload : false});\n            }\n        });\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({logs: nextProps.listlog.result});\n        this.intervalId = setInterval(()=>{\n            this.setState({logs: nextProps.listlog.result});\n        },15000);\n    }\n\n    getLogs = () =>{\n        var type = $(\"#select-log\").val();\n        var roomid = $(\"#roomid\").val().trim();\n        var userid = $(\"#userid\").val().trim();\n        var limit = 1000;\n        if(roomid == \"\"){\n            alert(\"Bạn chưa nhập mã lớp!\");\n            $(\"#roomid\").focus();\n        }\n        this.props.dispatch(getLog(type, roomid, userid, limit));\n    }\n\n    onTypeChange = (e) => {\n        let logType = e.target.value;\n        this.setState({logType, logs: []});\n    }\n\n    render() {\n        return (\n            <div className=\"col-12 open-class xtool-renderlink mg-left\">\n                <div className = \"box-xtool\">\n                    <h2 className=\"text-center qllh-header\">Logs Connection Quality</h2>\n                    <div className = \"box-connection\" >\n                        <div className=\"form-group\">\n                            <label>Chọn loại log:</label>\n                            <select className=\"form-control select-log\" id = \"select-log\" onChange={this.onTypeChange}>\n                                {\n                                    logTypes.map((e, i) => {\n                                        return (\n                                            <option value={e} key={i} >{e}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                            <input id = \"roomid\" type = \"text\" placeholder = \"Nhập Room ID (*)\"/>\n                            <input id = \"userid\" type = \"text\" placeholder = \"Nhập User ID\"/>\n                            <button type=\"button\" className=\"btn btn-info\" onClick = {this.getLogs}>Submit</button>\n                            <label className=\"checkbox-inline\">\n                                <input type=\"checkbox\" className =\"checkbox-reload\" value=\"\"/> Tự động reload<br/>\n                            </label>\n                            { this.state.logType == \"CONNECTION_QUALITY\" && <ConnectionQuality logs={this.state.logs}/> }\n                            { this.state.logType == \"INFO_DEVICE\" && <InfoDevice logs={this.state.logs}/> }\n                        </div>\n                    </div>\n                </div>\n            </div>         \n        );\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n        listlog : state['xtool/logconnection'].listlog,\n\t};\n}\nexport default connect(_mapStateToPropsTop)(LogInfo);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ReducerRegistry }  from '../base/redux';\nlet stateDefault = {\n    page: \"DASHBOARD\",\n    data:[],\n    userlist:[],\n    userTL:[],\n    roomTL: []\n}\n\nReducerRegistry.register('xtool/openclass', (state = stateDefault, action) => {\n    switch (action.type) {\n        case \"CHANGE_PAGE\":\n            return {\n                ...state,\n                page: action.page\n            }\n        case \"GET_ROOM\":\n                return {\n                    ...state,\n                    data: action.data\n                }\n        case \"GET_USER_LIST\":\n                return{\n                    ...state,\n                    userlist: action.userlist\n                }        \n        case \"GET_USER_TL\":\n                return{\n                    ...state,\n                    userTL: action.userTL\n                } \n        case \"GET_ROOM_NTL\":\n                return{\n                    ...state,\n                    roomTL: action.roomTL\n                }\n        default:\n            return state;\n    }\n});\n","import{\n    openClassAPI, getClassListAPI, getListRoomAPI, getListUserAPI, getUsersTLAPI\n}                               from './apis';\n\nexport function changePage(page){\n    return {\n        type        : \"CHANGE_PAGE\",\n        page\n    };\n}\n\nexport function getRoom(data){\n    return {\n        type        : \"GET_ROOM\",\n        data\n    };\n}\n\nexport function getUserList(userlist){\n    return {\n        type        : \"GET_USER_LIST\",\n        userlist\n    };\n}\n\nexport function getUsersTL(userTL){\n    return {\n        type        : \"GET_USER_TL\",\n        userTL\n    };\n}\n\nexport function getRoomTL(roomTL){\n    return {\n        type        : \"GET_ROOM_NTL\",\n        roomTL\n    };\n}\n\nexport function handleOpenClasses(){\n    return function( dispatch, getState ){\n        openClassAPI();\n    }\n}\n\nexport function getRoomsNVN(){\n    return function( dispatch, getState ){\n        getListRoomAPI().then(data =>{\n            dispatch(getRoom(data));\n        });\n    }\n}\n\nexport function getRoomsNTL(){\n    return function( dispatch, getState ){\n        getClassListAPI().then(roomTL =>{\n            dispatch(getRoomTL(roomTL));\n        });\n    }\n}\n\nexport function getUser(){\n    return function( dispatch, getState ){\n        getListUserAPI().then(userlist =>{\n            dispatch(getUserList(userlist));\n        });\n    }\n}\n\nexport function getUserTL(){\n    return function( dispatch, getState ){\n        getUsersTLAPI().then(userTL =>{\n            dispatch(getUsersTL(userTL));\n        });\n    }\n}","import config                   from '../config';\n\nexport function openClassAPI() {\n    return new Promise((resolve,reject) => {\n        fetch(`${config.domain.thailand.lms}/vcrx/createrooms`, {\n            method: 'GET',\n            })\n            .then(response => {\n                resolve(response.json())\n            })\n            .catch(error => reject(error))\n    })\n}\n\nexport function getClassListAPI() {\n    return new Promise((resolve,reject) => {\n        fetch(`${config.domain.thailand.lms}/vcrx/getclasslist`).then(response =>\n            response.json().then(roomTL => ({\n                roomTL: roomTL,\n                status: response.status\n            })\n        ).then(res => {\n            resolve(res.roomTL);\n        }));\n    })\n}\n\nexport function getListUserAPI(from, to) {\n    return new Promise((resolve,reject) => {\n        fetch(`${config.domain.thailand.lms}/vcrx/getusers`).then(response =>\n            response.json().then(userlist => ({\n                userlist: userlist,\n                status: response.status\n            })\n        ).then(res => {\n            resolve(res.userlist);\n        }));\n    })\n}\n\nexport function getListRoomAPI(from, to) {\n    return new Promise((resolve,reject) => {\n        fetch(`${config.domain.thailand.lms}/vcrx/getrooms`).then(response =>\n            response.json().then(data => ({\n                data: data,\n                status: response.status\n            })\n        ).then(res => {\n            resolve(res.data);\n        }));\n    })\n}\n\nexport function getUsersTLAPI() {\n    return new Promise((resolve,reject) => {\n        fetch(`${config.domain.thailand.lms}/vcrx/getuserstl`).then(response =>\n            response.json().then(userTL => ({\n                userTL: userTL,\n                status: response.status\n            })\n        ).then(res => {\n            resolve(res.userTL);\n        }));\n    })\n}\n","import React, { Component }                     from 'react';\nimport config                                   from '../../config';\nimport { connect }                              from 'react-redux';\nimport { \n    changePage, handleOpenClasses, getRoomsNTL, getRoomsNVN, getUser, getUserTL\n}                                               from '../actions';                    \n\nvar sections = ['08h - 09h','09h - 10h','10h - 11h','11h - 12h','12h - 13h','13h - 14h','14h - 15h','15h - 16h','16h - 17h','17h - 18h','18h - 19h','19h - 20h','20h - 21h','21h - 22h','22h - 23h','23h - 24h'];\n\nclass OpenClass extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomsInSection  : [],\n            teachers        : [],\n            POs             : [],\n            students        : [],\n            assistants      : [],\n            section         : \"08\",\n            created         : false, \n            classes         : [],\n            dataCheat       :[],\n            studentTL       : [],\n            teacherTL       : [],\n            isLoading       : false,\n            teacherVN       : [], \n            POTL            : []\n        }\n    }\n\n    componentWillMount(){\n        this.props.dispatch(changePage(\"OPENCLASS\"));\n    }\n\n    componentDidMount() {\n       this.getRooms();\n       this.getUsers();\n       this.getUsersTL();\n    }\n\n    handleOpenClass = async () => {\n        if(!this.state.created) {\n            this.props.dispatch(handleOpenClasses());\n            this.getRooms();\n            this.setState({ created: true });\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        let userInfo = JSON.parse(localStorage.getItem(config.localstorageKey.userinfo));\n        let users = null;\n        let rooms = [];\n        if(userInfo.system == \"NVN\"){\n            rooms = nextProps.rooms;\n            users            =     nextProps.userlist;\n            let teachers     =     users.filter(user => user.role == config.role.gv);\n            let POs          =     users.filter(user => user.role == config.role.po);\n            let students     =     users.filter(user => user.role == config.role.hv);\n            let assistants   =     users.filter(user => user.role == config.role.tg);\n            this.setState({\n                teachers,\n                POs,\n                students,\n                assistants\n            })\n        }else{\n            rooms = nextProps.roomTL;\n            users =     nextProps.userTL;\n            let teachers    = users.filter(user => user.roleid == 3);\n            let students    = users.filter(user => user.roleid == 5);\n            let assistants   = users.filter(user => user.roleid == 11);\n            let pos   = users.filter(user => user.roleid == 9);\n            this.setState({studentTL: students, teacherTL: teachers, teacherVN: assistants, POTL:pos});\n        }\n\n\n        let date = new Date();\n        let roomsInSection = [];\n        if(date.getMinutes() >= 45) {\n            roomsInSection = rooms.filter(room => new Date(room.timeAvailable*1000).getHours() == date.getHours() + 1);\n        } else {\n            roomsInSection = rooms.filter(room => new Date(room.timeAvailable*1000).getHours() == date.getHours());\n        }\n        if(roomsInSection.length > 5){\n            roomsInSection.length = 5;\n        }\n        this.setState({ roomsInSection });\n        if(nextProps.rooms.length > 0) {\n            this.setState({ created: true })\n        }\n    }\n\n    getUsers = async () =>{\n       this.props.dispatch(getUser());\n    }\n\n    getUsersTL = async () => {\n        this.props.dispatch(getUserTL());\n    } \n\n    filter = () => {\n        let section = this.state.section ? this.state.section.slice(0,2) : null;\n        sections.forEach((e, i) => {\n            let room = this.props.rooms.filter((room => new Date(room.timeAvailable*1000).getHours() == section ));\n            this.setState({ roomsInSection: room });\n        })\n    }\n\n    renderLink = (room, user, type) => {\n        let userInfo = JSON.parse(localStorage.getItem(config.localstorageKey.userinfo));\n        if(user){\n            let role;\n            switch (user.role) {\n                case config.role.gv:\n                    role =  userInfo.system == 'NVN' ? config.role.teacher : 'teacher';\n                    break;\n                case config.role.po:\n                    role = config.role.po\n                    break;\n                case config.role.hv:\n                    role = config.role.student\n                    break;\n                case config.role.tg:\n                    role = config.role.assistant\n                    break;\n                default:\n                    break;\n            }\n            if(userInfo.system == 'NVN'){\n                if(type == \"WEB\") {\n                    return `${(this.state.startDomain && this.state.startDomain != \"\") ? this.state.startDomain : config.domain.vietnam.meet}/${room.id}?token=${btoa(unescape(encodeURIComponent(`token=${this.props.userInfo.tokenApi}&meetingId=${room.id}&userId=${user.id}&userName=${user.fullName}&userRole=${role}&idVcrx=${user.idVcrx}&idRoomVcrx=${room.idVcrx}`)))}`;\n                } else if(type == \"APP\") \n                {\n                    return `vcrxconnect://mobileportal/${user.id}/${user.idVcrx}/${room.id}/${room.idVcrx}/${room.timeAvailable}/${user.fullName}//MOBILE/vi`;\n                }\n                else{\n                    return `vcrxconnect://mobileportal/${user.id}/${user.idVcrx}/${room.id}/${room.idVcrx}/${room.timeAvailable}/${user.fullName}//AUDIT/vi`;\n                }\n            } else {\n                if(type == \"WEB\") {\n                    let role = \"\";\n                    switch (user.roleid) {\n                        case \"5\":\n                            role = \"STUDENT\"\n                            break;\n                        case \"3\":\n                            role = \"teacher\"\n                            break;\n                        case \"11\":\n                            role = \"ASSISTANT\"\n                            break;\n                        case \"9\":\n                            role = \"PO\"\n                        default:\n                            break;\n                    }\n                    return `${config.domain.thailand.meet}/${room.id}?token=${btoa(unescape(encodeURIComponent(`token=${this.props.userInfo.tokenApi}&meetingId=${room.id}&userId=${user.id}&userName=${user.username}&userRole=${role}&idVcrx=${user.idVcrx}&idRoomVcrx=${room.idVcrx}`)))}`;\n                } \n            }\n        }\n    }\n\n    getRooms = async () =>{\n        let userInfo = JSON.parse(localStorage.getItem(config.localstorageKey.userinfo));\n        if(userInfo.system == \"NVN\"){\n            this.props.dispatch(getRoomsNVN())\n        }\n        else{\n            this.props.dispatch(getRoomsNTL())\n        }\n    }\n\n\n    render() {\n        let userInfo = JSON.parse(localStorage.getItem(config.localstorageKey.userinfo));\n        return (\n            <div className=\"col-12 open-class xtool-renderlink mg-left\">\n                <div className = \"box-xtool\">\n                <h2 className=\"text-center qllh-header\">XTOOL LMS</h2>\n\n                {/* Start thailand */}\n                {   userInfo.system == 'NTL' &&\n                    <div className = \"group-thailand\">\n                        <div className = \"box-cheat-log\">\n                            <p>Cheat vào lớp:</p>\n                            <input id = \"username\" type=\"text\"  className = \"form-control\" placeholder = \"Nhập user name\"/>\n                            <input id = \"roomidto\" type=\"text\" className = \"form-control\" placeholder = \"Nhập mã lớp\"/>\n                            <button onClick = {this.saveLogMove} className = \"btn btn-info\">Cheat vào lớp</button>\n                        </div>\n                        <div className = \"list-room\">\n                            <label className=\"label-section\">Ca học: </label>\n                            <select className=\"mdb-select md-form colorful-select dropdown-primarym form-control select-time\" onChange={e => this.setState({ section: e.target.value})} defaultValue=\"default\">\n                                <option value=\"default\">Chọn</option>\n                                {\n                                    sections.map((e, i) => {\n                                        return (\n                                            <option value={e} key={i} >{e}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                            <button className = \"btn btn-info btn-filter\" onClick={this.filter}>Lọc</button><br/><br/>\n                            Danh sách lớp: \n                            <table className=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th>STT</th>\n                                        <th>ID Room</th>\n                                        <th>ID Room VCRX</th>\n                                        <th>Slide</th>\n                                        <th>Video</th>\n                                        <th>Time Available</th>\n                                        <th>Link</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.roomsInSection.map((room, index) => {\n                                            if(this.state.studentTL[index]){\n                                                let linkGV_WEB = this.renderLink(room, this.state.teacherTL[(index)], \"WEB\");\n                                                let linkGVVN_WEB = this.renderLink(room, this.state.teacherVN[(index)], \"WEB\");\n                                                let linkPO_WEB = this.renderLink(room, this.state.POTL[(index)], \"WEB\");\n                                                let linkHV1_WEB = this.renderLink(room, this.state.studentTL[(index*6)], \"WEB\");\n                                                let linkHV2_WEB = this.renderLink(room, this.state.studentTL[(index*6+1)], \"WEB\");\n                                                let linkHV3_WEB = this.renderLink(room, this.state.studentTL[(index*6+2)], \"WEB\");\n                                                let linkHV4_WEB = this.renderLink(room, this.state.studentTL[(index*6+3)], \"WEB\");\n                                                let linkHV5_WEB = this.renderLink(room, this.state.studentTL[(index*6+4)], \"WEB\");\n                                                let linkHV6_WEB = this.renderLink(room, this.state.studentTL[(index*6+4)], \"WEB\");\n                                                return(\n                                                    <tr key={index}>\n                                                        <td>{index+1}</td>\n                                                        <td>{room.id}</td>\n                                                        <td>{room.idVcrx}</td>\n                                                        <td><a href={room.slide} target='_blank' title=\"Link slide\">Link</a></td>\n                                                        {\n                                                            room.video ?\n                                                            <td><a href={room.video} target='_blank' title=\"Link video\">Link</a></td>\n                                                            :\n                                                            <td><a href=\"https://qlhl.topicanative.edu.vn/uploads/28032018/02.04_.2018_How_are_you_feeling_today_fix_.mp4\" target='_blank' title=\"Link video\">Link</a></td>\n                                                        }\n                                                        \n                                                        <td>{new Date(room.timeAvailable*1000).toLocaleString()}</td>\n                                                        <td>\n                                                            <a href={linkGV_WEB} target='_blank'>Teacher </a> <br/>\n                                                            <a href={linkGVVN_WEB} target='_blank'>Assistant </a> <br/>\n                                                            <a href={linkPO_WEB} target='_blank'>PO </a> <br/>\n                                                            <a href={linkHV1_WEB} target='_blank'>{this.state.studentTL[(index*6)].username}</a> <br/>\n                                                            <a href={linkHV2_WEB} target='_blank'>{this.state.studentTL[(index*6+1 )].username}</a> <br/>\n                                                            <a href={linkHV3_WEB} target='_blank'>{this.state.studentTL[(index*6+2 )].username}</a> <br/>\n                                                            <a href={linkHV4_WEB} target='_blank'>{this.state.studentTL[(index*6+3 )].username}</a> <br/>\n                                                            <a href={linkHV5_WEB} target='_blank'>{this.state.studentTL[(index*6+4 )].username}</a> <br/>\n                                                            <a href={linkHV6_WEB} target='_blank'>{this.state.studentTL[(index*6+5 )].username}</a> <br/>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            }\n                                        })\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                }\n                {/* End Thailand */}\n                {    userInfo.system == 'NVN' &&\n                        <div className = \"box-button-open\">\n                            <div className=\"section-class\">\n                                <label className=\"label-section\">Ca học: </label>\n                                <select className=\"mdb-select md-form colorful-select dropdown-primary\" onChange={e => this.setState({ section: e.target.value})} defaultValue=\"default\">\n                                    <option value=\"default\">Chọn</option>\n                                    {\n                                        sections.map((e, i) => {\n                                            return (\n                                                <option value={e} key={i} >{e}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                                <button className = \"btn btn-info btn-create-class\" disabled={this.state.created} onClick = {this.handleOpenClass}>{this.props.callingApi && <i className = \"fa fa-spinner fa-spin\"></i>}Tạo lớp</button>\n                                <button className = \"btn btn-info btn-filter\" onClick={this.filter}>Lọc</button>\n                                <button className = \"btn btn-info btn-create-class\" onClick={this.openClasses}>{this.state.isLoading && <i className = \"fa fa-spinner fa-spin\"></i>}Mở lớp</button>\n                            </div>\n                            <h3 className=\"class-list\">Danh sách lớp</h3>\n                            <table className=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th>STT</th>\n                                        <th>ID Room</th>\n                                        <th>ID Room VCRX</th>\n                                        <th>Slide</th>\n                                        <th>Video</th>\n                                        <th>Time Available</th>\n                                        <th>Link</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.roomsInSection.map((room, index) => {\n                                            if(this.state.teachers[index] && this.state.students[index]){\n                                                let linkGV  = this.renderLink(room, this.state.teachers[index], \"WEB\");\n                                                let linkPO  = this.renderLink(room, this.state.POs[index], \"WEB\");\n                                                let linkTG  = this.renderLink(room, this.state.assistants[index], \"WEB\");\n                                                let linkHV1_WEB = this.renderLink(room, this.state.students[(index*6)], \"WEB\");\n                                                let linkHV1_APP = this.renderLink(room, this.state.students[(index*6)], \"APP\");\n                                                let linkHV2_WEB = this.renderLink(room, this.state.students[(index*6+1)], \"WEB\");\n                                                let linkHV2_APP = this.renderLink(room, this.state.students[(index*6+1)], \"APP\");\n                                                let linkHV3_WEB = this.renderLink(room, this.state.students[(index*6+2)], \"WEB\");\n                                                let linkHV3_APP = this.renderLink(room, this.state.students[(index*6+2)], \"APP\");\n                                                let linkHV4_WEB = this.renderLink(room, this.state.students[(index*6+3)], \"WEB\");\n                                                let linkHV4_APP = this.renderLink(room, this.state.students[(index*6+3)], \"APP\");\n                                                let linkHV5_WEB = this.renderLink(room, this.state.students[(index*6+4)], \"WEB\");\n                                                let linkHV5_APP = this.renderLink(room, this.state.students[(index*6+4)], \"APP\");\n                                                let linkHV6_WEB = this.renderLink(room, this.state.students[(index*6+5)], \"WEB\");\n                                                let linkHV6_APP = this.renderLink(room, this.state.students[(index*6+5)], \"APP\");\n\n                                                return(\n                                                    <tr key={index}>\n                                                        <td>{index+1}</td>\n                                                        <td>{room.id}</td>\n                                                        <td>{room.idVcrx}</td>\n                                                        <td><a href={room.slide} target='_blank' title=\"Link slide\">Link</a></td>\n                                                        <td><a href={room.video} target='_blank' title=\"Link video\">Link</a></td>\n                                                        <td>{new Date(room.timeAvailable*1000).toLocaleString()}</td>\n                                                        <td>\n                                                            <a href={linkGV} target='_blank'>{this.state.teachers[index].fullName}</a><br/>\n                                                            <a href={linkPO} target='_blank'>{this.state.POs[index].fullName}</a><br/>\n                                                            <a href={linkTG} target='_blank'>{this.state.assistants[index].fullName}</a><br/>\n                                                            <a href={linkHV1_WEB} target='_blank'>{this.state.students[(index*6)].fullName+\"-WEB\"}</a> | <a href={linkHV1_APP} target='_blank'>{this.state.students[(index*6)].fullName+\"-APP\"}</a><br/>\n                                                            <a href={linkHV2_WEB} target='_blank'>{this.state.students[(index*6+1)].fullName+\"-WEB\"}</a> | <a href={linkHV2_APP} target='_blank'>{this.state.students[(index*6+1)].fullName+\"-APP\"}</a><br/>\n                                                            <a href={linkHV3_WEB} target='_blank'>{this.state.students[(index*6+2)].fullName+\"-WEB\"}</a> | <a href={linkHV3_APP} target='_blank'>{this.state.students[(index*6+2)].fullName+\"-APP\"}</a><br/>\n                                                            <a href={linkHV4_WEB} target='_blank'>{this.state.students[(index*6+3)].fullName+\"-WEB\"}</a> | <a href={linkHV4_APP} target='_blank'>{this.state.students[(index*6+3)].fullName+\"-APP\"}</a><br/>\n                                                            <a href={linkHV5_WEB} target='_blank'>{this.state.students[(index*6+4)].fullName+\"-WEB\"}</a> | <a href={linkHV5_APP} target='_blank'>{this.state.students[(index*6+4)].fullName+\"-APP\"}</a><br/>\n                                                            <a href={linkHV6_WEB} target='_blank'>{this.state.students[(index*6+5)].fullName+\"-WEB\"}</a> | <a href={linkHV6_APP} target='_blank'>{this.state.students[(index*6+5)].fullName+\"-APP\"}</a><br/>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            }\n                                        })\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            </div>        \n        );\n    }\n}\n\nfunction _mapStateToPropsTop(state) {\n\treturn {\n        userlist : state['xtool/openclass'].userlist,\n        rooms : state['xtool/openclass'].data,\n        userInfo: state['xtool/app'].userInfo,\n        userTL : state['xtool/openclass'].userTL,\n        roomTL : state['xtool/openclass'].roomTL\n\t};\n}\nexport default connect(_mapStateToPropsTop)(OpenClass);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport Thunk from 'redux-thunk';\nimport {\n    Login, Homepage, Admin, Xtool, Header, Sidebar\n} from './react/app';\nimport {\n    PrivateComponent\n} from './react/base/author';\nimport {\n    UnListening\n} from './react/logs';\nimport {\n    LogInfo\n} from './react/logconnection';\n\nimport {\n    BrowserRouter as Router,\n    Route\n} from 'react-router-dom';\nimport {browserHistory} from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    StateListenerRegistry,\n    ReducerRegistry,\n    MiddlewareRegistry\n} from './react/base/redux';\n\nimport {updateUserInfo} from './react/app'\nimport {OpenClass} from './react/openclass';\n\nwindow.APP = {}\n\nlet _createStore = () => {\n    let middleware = MiddlewareRegistry.applyMiddleware(Thunk);\n    const reducer = ReducerRegistry.combineReducers();\n    const store = createStore(reducer, middleware);\n    StateListenerRegistry.subscribe(store);\n    if (typeof APP !== 'undefined') {\n        window.APP.store = store;\n    }\n    return store;\n}\nlet store = _createStore();\n\n{\n    let userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    if (userInfo) {\n        store.dispatch(updateUserInfo(userInfo))\n    }\n}\n\nReactDOM.render(\n        <Provider store={store}>\n            <Router history={browserHistory}>\n                <div>\n                    <Header/>\n                    <section className=\"container-fluid px-0 g-pt-65\">\n                        <div className=\"row no-gutters g-pos-rel g-overflow-x-hidden\">\n                            <Sidebar/>\n                            <PrivateComponent>\n                                <Route exact path=\"/\" component={Homepage}/>\n                            </PrivateComponent>\n                            <PrivateComponent roles={[\"ROLE_ADMIN\"]} userIds={[123]}>\n                                <Route exact path=\"/admin\" component={Admin}/>\n                            </PrivateComponent>\n                            <PrivateComponent>\n                                <Route path=\"/xtool\" component={Xtool}/>\n                            </PrivateComponent>\n                            <PrivateComponent>\n                                <Route path=\"/openclass\" component={OpenClass}/>\n                            </PrivateComponent>\n                            <PrivateComponent>\n                                <Route path=\"/logs\" component={LogInfo}/>\n                            </PrivateComponent>\n                            <PrivateComponent>\n                                <Route path=\"/status\" component={UnListening}/>\n                            </PrivateComponent>\n                        </div>\n                    </section>\n                </div>\n                <Route exact path=\"/login\" component={Login}/>\n            </Router>\n        </Provider>\n        , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}